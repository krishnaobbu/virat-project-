pipeline {
    agent any
    tools {
        maven 'maven3'
    }
     environment{
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('git checkout') {
            steps {
                git 'https://github.com/krishnaobbu/star-agile-project-demo-dummy.git'
            }
        }
        stage('build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('sonar') {
           steps {
                withSonarQubeEnv('sonar'){
                   sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=star-agile-project-demo-dummy\
                   -Dsonar.java.binaries=. \
                   -Dsonar.projectKey=star-agile-project-demo-dummy'''
               }
            }
        }
      stage('Quality Gate') {
            steps {
                script {
                  waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
         }
         stage('nexus'){
            steps {
               nexusArtifactUploader artifacts: [[artifactId: 'myweb', classifier: '', file: 'target/myweb-8.2.0.war', type: 'war']], credentialsId: '3a7d4f1a-547a-4eec-9aa4-bdfd71fa65ac', groupId: 'in.javahome', nexusUrl: '44.204.54.2:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'sample-release', version: '8.2.0'
            }
        }  
stage('dockerbuild'){
            steps{
                sh 'docker build -t krishnaobbu/address:1.0 .'
                
            }
        }
        stage('docker push'){
            steps{
                withCredentials([string(credentialsId: 'docker-cred', variable: 'docker')] {
            sh 'docker login -u krishnaobbu -p ${docker}'
            sh 'docker push  krishnaobbu/address:1.0 '
         }
      }
    }     
  }
}
  
 